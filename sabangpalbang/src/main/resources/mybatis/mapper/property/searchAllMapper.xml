<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.property.dao.SearchAllDAO">



	<select id="count" parameterType="com.app.dto.MainSearchDto" resultType="int">
	SELECT
    	(SELECT
    	 COUNT(*) 
    	 FROM property p
    	 <include refid ="searchP"/>
    	 ) + 
    	(SELECT
    	 COUNT(*) 
    	 FROM 
    	 property_service ps 
    	 LEFT JOIN 
    	 confirm c 
    	 ON ps.property_service_id = c.property_service_id
    	 <include refid ="searchPs"/>) 
    AS total_count;
	</select>

	<!-- 전체 데이터 keyword 조회 쿼리 -->
	<select id="getAllProperties"
		resultType="com.app.property.dto.PropertyResultDTO">
		SELECT
		p.pname,
		p.property_id,
		NULL AS property_service_id,
		p.p_service_type,
		NULL AS ps_service_type,
		p.price,
		p.property_type_id,
		NULL AS private_property,
		NULL AS confirm_check,
		p.month_price,
		p.deposit,
		p.telephone,
		p.address,
		p.count,
		p.floor,
		p.feet,
		p.charge,
		p.description
		FROM
		property p
		<include refid ="searchP"/>


		UNION ALL

		SELECT
		ps.pname,
		NULL AS
		property_id,
		ps.property_service_id,
		NULL AS p_service_type,
		ps.ps_service_type,
		ps.price,
		ps.property_type_id,
		ps.private_property,
		c.confirm_check,
		ps.month_price,
		ps.deposit,
		ps.telephone,
		ps.address,
		ps.count,
		ps.floor,
		ps.feet,
		ps.charge,
		ps.description
		
		FROM property_service ps
		LEFT JOIN confirm c ON
		ps.property_service_id = c.property_service_id
		<include refid ="searchPs"/>
		
		LIMIT #{paginationDto.limitStart},#{recordSize} 
	</select>

	<sql id ="searchPs">
		<where>
		c.confirm_check = 2
		AND (ps.price IS NULL OR ps.price BETWEEN #{dealPriceMin} AND #{dealPriceMax})
		AND (ps.deposit IS NULL OR ps.deposit BETWEEN #{jeonsePriceMin} AND #{jeonsePriceMax})
		AND (ps.month_price IS NULL OR ps.month_price BETWEEN #{wolsePriceMin} AND #{wolsePriceMax})
		AND (ps.feet IS NULL OR ps.feet BETWEEN #{feetMin} AND #{feetMax})
		
		 <if test="keyword != null and keyword != ''">
	            <choose>
	                <!-- 검색 유형이 있을 때 -->
	                <when test="searchType != null and searchType != ''">
	                    <choose>
	                        <when test="'id'.equals( searchType )">
	                           AND ps.address LIKE CONCAT('%', #{keyword}, '%')
	                        </when>
	                        <when test="'email'.equals( searchType )">
	                           AND ps.pname LIKE CONCAT('%', #{keyword}, '%')
	                        </when>
	                    </choose>
	                </when>
	                
	                <!-- 전체 검색일 때 -->
	                <otherwise>
	                    AND (
	                         ps.address LIKE CONCAT('%', #{keyword}, '%')
	                        OR ps.pname LIKE CONCAT('%', #{keyword}, '%')
	                    )
	                </otherwise>
	            </choose>
	        </if>
	        <if test="deal!=0 and jeonse!=0 and wolse!=0">
	        	AND(ps.property_type_id = 1 OR ps.property_type_id=2 OR ps.property_type_id=3)
	        
	        </if>
	        <if test="deal!=0 and jeonse!=0 and wolse==0">
	        	AND(ps.property_type_id = 1 OR ps.property_type_id=2)
	        </if>
	        <if test="deal!=0 and wolse!=0 and jeonse==0">
	        	AND(ps.property_type_id = 1 OR ps.property_type_id=3)
	        </if>
	        <if test="deal==0 and jeonse!=0 and wolse!=0">
	        	AND(ps.property_type_id=2 OR ps.property_type_id=3)
	        </if>
	         <if test="deal!=0 and jeonse==0 and wolse==0">
	        	AND(ps.property_type_id=1)
	        </if>
	         <if test="deal==0 and jeonse!=0 and wolse==0">
	        	AND(ps.property_type_id=2)
	        </if>
	         <if test="deal==0 and jeonse==0 and wolse!=0">
	        	AND(ps.property_type_id=3)
	        </if>
	     </where>
	</sql>
	
	<sql id ="searchP">
		<where>
		p.price IS NULL OR p.price BETWEEN #{dealPriceMin} AND #{dealPriceMax}
		AND (p.deposit IS NULL OR p.deposit BETWEEN #{jeonsePriceMin} AND #{jeonsePriceMax})
		AND (p.month_price IS NULL OR p.month_price BETWEEN #{wolsePriceMin} AND #{wolsePriceMax})
		AND (p.feet IS NULL OR p.feet BETWEEN #{feetMin} AND #{feetMax})
		
		 <if test="keyword != null and keyword != ''">
	            <choose>
	                <!-- 검색 유형이 있을 때 -->
	                <when test="searchType != null and searchType != ''">
	                    <choose>
	                        <when test="'id'.equals( searchType )">
	                            p.address LIKE CONCAT('%', #{keyword}, '%')
	                        </when>
	                        <when test="'email'.equals( searchType )">
	                            p.pname LIKE CONCAT('%', #{keyword}, '%')
	                        </when>
	                    </choose>
	                </when>
	                
	                <!-- 전체 검색일 때 -->
	                <otherwise>
	                    AND (
	                         p.address LIKE CONCAT('%', #{keyword}, '%')
	                        OR p.pname LIKE CONCAT('%', #{keyword}, '%')
	                    )
	                </otherwise>
	            </choose>
	        </if>
	         <if test="deal!=0 and jeonse!=0 and wolse!=0">
	        	AND(p.property_type_id = 1 OR p.property_type_id=2 OR p.property_type_id=3)
	        
	        </if>
	        <if test="deal!=0 and jeonse!=0 and wolse==0">
	        	AND(p.property_type_id = 1 OR p.property_type_id=2)
	        </if>
	        <if test="deal!=0 and wolse!=0 and jeonse==0">
	        	AND(p.property_type_id = 1 OR p.property_type_id=3)
	        </if>
	        <if test="deal==0 and jeonse!=0 and wolse!=0">
	        	AND(p.property_type_id=2 OR p.property_type_id=3)
	        </if>
	         <if test="deal!=0 and jeonse==0 and wolse==0">
	        	AND(p.property_type_id=1)
	        </if>
	         <if test="deal==0 and jeonse!=0 and wolse==0">
	        	AND(p.property_type_id=2)
	        </if>
	         <if test="deal==0 and jeonse==0 and wolse!=0">
	        	AND(p.property_type_id=3)
	        </if>
	        </where>
	</sql>

	<!-- 서비스 매물 상세 정보 -->
	<select id="getpsDetail"
		resultType="com.app.property.dto.PropertyDetailDTO">
		SELECT
		address,
		pname,
		price,
		deposit,
		feet,
		property_service_id,
		floor,
		charge,
		count,
		registration_date,
		move_date,
		description,
		ps_service_type,
		telephone,
		month_price,
		property_type_id
		FROM
		property_service
		WHERE
		ps_service_type =
		#{psServiceType} AND
		property_service_id =
		#{propertyId}
	</select>

	<!-- 크롤링 매물 상세 정보 -->
	<select id="getpDetail"
		resultType="com.app.property.dto.PropertyDetailDTO">
		SELECT
		address,
		pname,
		price,
		deposit,
		feet,
		property_id,
		floor,
		charge,
		count,
		registration_date,
		move_date,
		description,
		p_service_type,
		telephone,
		month_price,
		property_type_id
		FROM
		property
		WHERE p_service_type =
		#{pServiceType} AND
		property_id = #{propertyId}
	</select>

	<!-- Property 매물 정보 -->
	<select id="getProperties" resultType="com.app.dto.PropertyDTO">
		SELECT
		property_id,
		p_service_type,
		property_type_id,
		price,
		feet,
		pname,
		deposit,
		charge,
		count,
		registration_date,
		move_date,
		address,
		description,
		floor,
		month_price,
		telephone
		FROM property
	</select>
	
	<select id="getRanProperties" resultType="com.app.dto.PropertyDTO">
		SELECT
		property_id,
		p_service_type,
		property_type_id,
		price,
		feet,
		pname,
		deposit,
		charge,
		count,
		registration_date,
		move_date,
		address,
		description,
		floor,
		month_price,
		telephone
		FROM property
		ORDER BY RAND()
		LIMIT 4
	</select>

	<!-- PropertyService 매물 정보 -->
	<select id="getServiceProperties"
		resultType="com.app.dto.PropertyServiceDTO">
		SELECT
		ps.property_service_id,
		ps.ps_service_type,
		ps.user_id,
		ps.property_type_id,
		ps.price,
		ps.feet,
		ps.pname,
		ps.deposit,
		ps.charge,
		ps.count,
		ps.registration_date,
		ps.move_date,
		ps.address,
		ps.description,
		ps.floor,
		ps.private_property,
		ps.month_price,
		ps.telephone,
		c.confirm_check
		FROM
		property_service ps
		LEFT JOIN confirm c ON ps.property_service_id =
		c.property_service_id
		WHERE c.confirm_check = 1
	</select>
	
	<select id="getRanServiceProperties"
		resultType="com.app.dto.PropertyServiceDTO">
		SELECT
		ps.property_service_id,
		ps.ps_service_type,
		ps.user_id,
		ps.property_type_id,
		ps.price,
		ps.feet,
		ps.pname,
		ps.deposit,
		ps.charge,
		ps.count,
		ps.registration_date,
		ps.move_date,
		ps.address,
		ps.description,
		ps.floor,
		ps.private_property,
		ps.month_price,
		ps.telephone,
		c.confirm_check
		FROM
		property_service ps
		LEFT JOIN confirm c ON ps.property_service_id =
		c.property_service_id
		WHERE c.confirm_check = 1
		ORDER BY RAND()
	</select>


	<!-- 다중 이미지 -->
	<select id="AllImages" resultType="com.app.dto.ImagesDTO">
		select property_id ,
		property_service_id , ps_service_type ,
		p_service_type , filename ,
		filepath from images WHERE (p_service_type=#{ServiceType} AND
		property_id=#{Id}) or (ps_service_type=#{ServiceType} AND
		property_service_id=#{Id})
	</select>

	<!-- 썸네일 -->
	<select id="getImageP" resultType="com.app.dto.ImagesDTO">
		SELECT
		property_id,
		property_service_id,
		filename,
		filepath,
		p_service_type,
		ps_service_type
		FROM (
		SELECT
		property_id,
		property_service_id,
		filename,
		filepath,
		p_service_type,
		ps_service_type,
		ROW_NUMBER() OVER(PARTITION BY
		property_id ORDER BY image_id) as
		img_sequence
		FROM images
		) AS
		img
		WHERE img.img_sequence = 1 and
		property_id=#{id1} and
		p_service_type=#{id2}
	</select>
	<!-- 썸네일 -->
	<select id="getImagePs" resultType="com.app.dto.ImagesDTO">
		SELECT
		property_id,
		property_service_id,
		filename,
		filepath,
		p_service_type,
		ps_service_type
		FROM (
		SELECT
		property_id,
		property_service_id,
		filename,
		filepath,
		p_service_type,
		ps_service_type,
		ROW_NUMBER() OVER(PARTITION BY
		property_service_id ORDER BY image_id) as
		img_sequence
		FROM images
		) AS
		img
		WHERE img.img_sequence = 1 and
		property_service_id=#{id1} and
		ps_service_type=#{id2}
	</select>

	<!-- 상세정보 실거래가 -->
	<select id="getTransaction"
		resultType="com.app.dto.TransactionPriceDTO">
		SELECT
		regional_cd,
		dong,
		apartment_name,
		deal_amount,
		deal_year,
		deal_month
		FROM transaction_price
		WHERE #{address} LIKE CONCAT('%', dong, '%') AND
		apartment_name LIKE CONCAT('%', #{pname}, '%')
	</select>

	<!-- 아파트 실거래가 비교 -->
	<select id="getAllTransaction"
		resultType="com.app.dto.TransactionPriceDTO">
		SELECT
		regional_cd,
		apartment_name,
		deal_amount,
		deal_year
		FROM transaction_price
		<!-- WHERE regional_cd = #{regional_cd} AND dong_cd = #{dong_cd} -->
	</select>
	
	<!-- 아파트 실거래가 그래프 정보 -->
 	<select id="getTransGraph"
		resultType="com.app.dto.TransactionPriceDTO">
		SELECT
		regional_cd,
		apartment_name,
		deal_amount,
		deal_year,
		dong_cd,
		apart_cd
		FROM transaction_price
		WHERE regional_cd = #{regional_cd} AND dong_cd = #{dong_cd} AND apart_cd= #{apart_cd}
	</select>
	
	<!-- 동 이름 목록 -->
	<select id="getAllDong" resultType="com.app.dto.TransactionPriceDTO">
		SELECT DISTINCT dong, regional_cd, dong_cd
		FROM transaction_price
		WHERE regional_cd = #{regional_cd}
	</select>
	
	<!--  아파트 이름 목록 -->
	<select id="getAllName" resultType="com.app.dto.TransactionPriceDTO">
		SELECT DISTINCT dong, apartment_name, dong_cd, apart_cd, regional_cd
		FROM transaction_price
		WHERE regional_cd = #{regional_cd} AND dong_cd = #{dong_cd}
	</select>
</mapper>
