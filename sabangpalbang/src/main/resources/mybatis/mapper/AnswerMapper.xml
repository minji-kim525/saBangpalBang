<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.question.dao.AnswerDao">

	<insert id="answerInsert"
		parameterType="com.app.question.dto.AnswerDto">
		insert into
		answer(answer_id,question_id,user_id,title,content,created_at)
		values(0,#{question_id},#{user_id},#{title},#{content},NOW() +
		INTERVAL 9 HOUR);
	</insert>
	
	<insert id="insertNotifyAnswer">
	insert into
	notify(notify_check, question_id, user_id)
	values(0,#{question_id},#{user_id})
	
	</insert>

	<update id="updateAnswer"
		parameterType="com.app.question.dto.AnswerDto">
		update answer SET content = #{content}, updated_at =
		now()
		where answer_id = #{answer_id}
	</update>

	<delete id="deleteContent" parameterType="int">
		delete from answer where answer_id = #{answer_id}
	</delete>
	
	<select id="selectCount" resultType="int">
		select count(*) 
	    from question a left join
		answer b
		on a.question_id =
		b.question_id
		left join users c on a.user_id = c.user_id
		<include refid ="search"/>		
	</select>

	<select id="count" resultType="int" parameterType="int">
		select
		count(*) from answer where question_id = #{question_id}
	</select>

	<select id="answerSelect"
		resultType="com.app.question.dto.AnswerDto" parameterType="int">
		select answer_id,content,created_at from answer
		where question_id = #{question_id}

	</select>

	<select id="titleSelect"
		resultType="com.app.question.dto.titleDto">
		select a.question_id,a.title , a.created_at , c.id , a.question_type
		from question a left
		outer join answer b
		on a.question_id = b.question_id
		left join users c on a.user_id = c.user_id
		where b.question_id is null
		<include refid ="search"/>
		ORDER BY created_at DESC
		LIMIT #{paginationDto.limitStart},#{recordSize}
	</select>
	
	
	<sql id ="search">
		<where>
		 <if test="keyword != null and keyword != ''">
	            <choose>
	                <!-- 검색 유형이 있을 때 -->
	                <when test="searchType != null and searchType != ''">
	                    <choose>
	                        <when test="'writer'.equals( searchType )">
	                            c.id LIKE CONCAT('%', #{keyword}, '%')
	                        </when>
	                        <when test="'name'.equals( searchType )">
	                            a.title LIKE CONCAT('%', #{keyword}, '%')
	                        </when>
	                    </choose>
	                </when>
	                
	                <!-- 전체 검색일 때 -->
	                <otherwise>
	                    AND (
	                         c.id LIKE CONCAT('%', #{keyword}, '%')
	                        OR a.title LIKE CONCAT('%', #{keyword}, '%')
	                    )
	                </otherwise>
	            </choose>
	        </if>
	        </where>
	</sql> 

</mapper>  