<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.question.dao.QuestionDao">

	<insert id="addQuestion" parameterType="Map">
		<selectKey resultType="int" keyProperty="question_id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO question (question_id, user_id, title, content,
		question_type, created_at)
		VALUES (0, #{user_id}, #{title}, #{content}, #{question_type}, NOW() +
		INTERVAL 9 HOUR);
	</insert>

	<update id="updateQuestion"
		parameterType="com.app.dto.QuestionDTO">
		update question SET title = #{title},
		content =
		#{content}, question_type = #{question_type},updated_at = now()
		where
		question_id = #{question_id}
	</update>

	<delete id="deleteContent" parameterType="int">
		delete from question
		where question_id = #{question_id}
	</delete>

	<select id="count" resultType="int">
		select count(*)
		from question a left join
		answer b
		on a.question_id =
		b.question_id
		left join
		users c on a.user_id = c.user_id
		<include refid="search" />
	</select>

	<select id="questionList" parameterType="map"
		resultType="com.app.question.dto.titleDto">
		select * from question
		order by created_at desc limit
		#{start}, #{count}
	</select>

	<select id="contentSelect"
		resultType="com.app.question.dto.titleDto" parameterType="int">
		select
		question_id,title,created_at,id,content,user_id,question_type
		from
		question natural
		join users where question_id = #{question_id}

	</select>

	<select id="titleSelect"
		resultType="com.app.question.dto.titleDto">
		select a.question_id , a.title , b.answer_id ,a.created_at
		, c.id ,
		a.question_type
		from question a left join answer b
		on a.question_id =
		b.question_id
		left join users c on a.user_id = c.user_id
		<include refid="search" />
		ORDER BY
		created_at DESC
		LIMIT #{paginationDto.limitStart},#{recordSize}

	</select>

	<sql id="search">
		<where>
			<if test="keyword != null and keyword != ''">
				<choose>
					<!-- 검색 유형이 있을 때 -->
					<when test="searchType != null and searchType != ''">
						<choose>
							<when test="'writer'.equals( searchType )">
								c.id LIKE CONCAT('%', #{keyword}, '%')
							</when>
							<when test="'name'.equals( searchType )">
								a.title LIKE CONCAT('%', #{keyword}, '%')
							</when>
						</choose>
					</when>

					<!-- 전체 검색일 때 -->
					<otherwise>
						AND (
						c.id LIKE CONCAT('%', #{keyword}, '%')
						OR a.title LIKE CONCAT('%', #{keyword}, '%')
						)
					</otherwise>
				</choose>
			</if>
		</where>
	</sql>



</mapper>  